{"remainingRequest":"C:\\Users\\tyt\\Desktop\\编程\\vscode\\kjxh_mianshi\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\tyt\\Desktop\\编程\\vscode\\kjxh_mianshi\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\tyt\\Desktop\\编程\\vscode\\kjxh_mianshi\\src\\api\\info.js","dependencies":[{"path":"C:\\Users\\tyt\\Desktop\\编程\\vscode\\kjxh_mianshi\\src\\api\\info.js","mtime":1601183818877},{"path":"C:\\Users\\tyt\\Desktop\\编程\\vscode\\kjxh_mianshi\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\tyt\\Desktop\\编程\\vscode\\kjxh_mianshi\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\tyt\\Desktop\\编程\\vscode\\kjxh_mianshi\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["C:/Users/tyt/Desktop/编程/vscode/kjxh_mianshi/src/api/info.js"],"names":["axios","config","getAllStudents","uuid","vm","console","log","$store","commit","apiWarp","then","res","data","status","tableData","students","$message","type","message","msg","catch","err","getDetails","studentId","data1","firstView","data2","secondView","score1","score2","setTimeout","changeTime","changeWeight","url","methods","Promise","resolve","reject","target","serverAddress","post","get"],"mappings":"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","sourcesContent":["/* eslint-disable no-async-promise-executor */\r\nimport axios from \"axios\";\r\nimport config from '@/config/config.json'\r\n\r\nexport default {\r\n  //请求全部信息\r\n  async getAllStudents(uuid, vm) {\r\n    console.log(`${uuid}请求全部信息`);\r\n    vm.$store.commit('toggleOverLay')\r\n    await apiWarp(\"/getStudents\", {\r\n        uuid\r\n      }, \"post\")\r\n      .then((res) => {\r\n        let data = res.data\r\n        //处理返回信息\r\n        if (data.status === 0) {\r\n          //插入数据\r\n          vm.tableData = data.students;\r\n        } else {\r\n          vm.$message({\r\n            type: \"error\",\r\n            message: data.msg,\r\n          });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n    vm.$store.commit('toggleOverLay')\r\n  },\r\n\r\n  //获取具体信息\r\n  async getDetails(data, vm) {\r\n    console.log(`请求${data.studentId}详细信息`);\r\n    //开启遮罩层\r\n    vm.$store.commit('toggleOverLay')\r\n    await apiWarp('/getStudentById', data, 'post').then((res) => {\r\n      let data = res.data\r\n      //处理接受信息\r\n      if (data.status === 0) {\r\n        vm.data1 = data.firstView;\r\n        vm.data2 = data.secondView;\r\n        vm.score1 = data.score1;\r\n        vm.score2 = data.score2;\r\n      } else {\r\n        vm.$message({\r\n          type: \"error\",\r\n          message: data.msg,\r\n        });\r\n      }\r\n    }).catch(err => {\r\n      console.log(err);\r\n    })\r\n    //关闭遮罩层\r\n    setTimeout(() => {\r\n      vm.$store.commit('toggleOverLay')\r\n    }, 1000)\r\n  },\r\n\r\n  //修改面试时间\r\n  async changeTime(data, vm) {\r\n    console.log(`发送修改数据`);\r\n    //开启遮罩层\r\n    vm.$store.commit('toggleOverLay')\r\n    await apiWarp('/setStudentTime', data, 'post').then((res) => {\r\n      let data = res.data;\r\n      if (data.status == 0) {\r\n        vm.$message({\r\n          type: 'success',\r\n          message: data.msg\r\n        })\r\n      } else {\r\n        vm.$message({\r\n          type: 'error',\r\n          message: data.msg\r\n        })\r\n      }\r\n    }).catch((err) => {\r\n      console.log(err);\r\n    })\r\n    //关闭遮罩层\r\n    setTimeout(() => {\r\n      vm.$store.commit('toggleOverLay')\r\n    }, 1000)\r\n  },\r\n\r\n  //修改权值\r\n  async changeWeight(data, vm) {\r\n    //开启遮罩层\r\n    vm.$store.commit(\"toggleOverLay\");\r\n    console.log(`发送权值修改`);\r\n    //发送请求\r\n    await apiWarp('/setWeight', data, 'post').then((res) => {\r\n      console.log(res);\r\n      let data = res.data;\r\n      if (data.status == 0) {\r\n        vm.$message({\r\n          type: 'success',\r\n          message: data.msg\r\n        })\r\n      } else {\r\n        vm.$message({\r\n          type: 'error',\r\n          message: data.msg\r\n        })\r\n      }\r\n    }).catch(err => {\r\n      console.log(err);\r\n    })\r\n    //关闭遮罩\r\n    setTimeout(() => {\r\n      vm.$store.commit('toggleOverLay')\r\n    }, 1000)\r\n  }\r\n};\r\n\r\nconst apiWarp = (url, data, methods) => {\r\n  return new Promise(async (resolve, reject) => {\r\n    try {\r\n      let target = config.serverAddress + url\r\n      if (methods === \"post\") {\r\n        resolve(await axios.post(target, data));\r\n      } else if (methods === \"get\") {\r\n        resolve(await axios.get(target));\r\n      }\r\n    } catch (err) {\r\n      reject(err);\r\n    }\r\n  });\r\n}"]}]}