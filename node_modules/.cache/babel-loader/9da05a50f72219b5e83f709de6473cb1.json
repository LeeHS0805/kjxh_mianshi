{"remainingRequest":"/Users/leehs/Downloads/kjxh_mianshi/node_modules/babel-loader/lib/index.js!/Users/leehs/Downloads/kjxh_mianshi/node_modules/eslint-loader/index.js??ref--13-0!/Users/leehs/Downloads/kjxh_mianshi/src/api/info.js","dependencies":[{"path":"/Users/leehs/Downloads/kjxh_mianshi/src/api/info.js","mtime":1601543660822},{"path":"/Users/leehs/Downloads/kjxh_mianshi/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/leehs/Downloads/kjxh_mianshi/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/leehs/Downloads/kjxh_mianshi/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/leehs/Downloads/kjxh_mianshi/src/api/info.js"],"names":["axios","config","getAllStudents","uuid","vm","$store","commit","apiWarp","then","res","data","status","tableData","students","$message","type","message","msg","catch","err","console","log","getDetails","data1","firstView","data2","secondView","score1","score2","setTimeout","changeTime","changeWeight","searchApi","url","methods","Promise","resolve","reject","target","serverAddress","post","get"],"mappings":"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","sourcesContent":["/* eslint-disable no-async-promise-executor */\nimport axios from \"axios\";\nimport config from '@/config/config.json'\n\nexport default {\n  //请求全部信息\n  async getAllStudents(uuid, vm) {\n    vm.$store.commit('toggleOverLay')\n    await apiWarp(\"/getStudents\", {\n        uuid\n      }, \"post\")\n      .then((res) => {\n        let data = res.data\n        //处理返回信息\n        if (data.status === 0) {\n          //插入数据\n          vm.tableData = data.students;\n        } else {\n          vm.$message({\n            type: \"error\",\n            message: data.msg,\n          });\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n    vm.$store.commit('toggleOverLay')\n  },\n\n  //获取具体信息\n  async getDetails(data, vm) {\n    //开启遮罩层\n    vm.$store.commit('toggleOverLay')\n    await apiWarp('/getStudentById', data, 'post').then((res) => {\n      let data = res.data\n      //处理接受信息\n      if (data.status === 0) {\n        vm.data1 = data.firstView;\n        vm.data2 = data.secondView;\n        vm.score1 = data.score1;\n        vm.score2 = data.score2;\n      } else {\n        vm.$message({\n          type: \"error\",\n          message: data.msg,\n        });\n      }\n    }).catch(err => {\n      console.log(err);\n    })\n    //关闭遮罩层\n    setTimeout(() => {\n      vm.$store.commit('toggleOverLay')\n    }, 1000)\n  },\n\n  //修改面试时间\n  async changeTime(data, vm) {\n    //开启遮罩层\n    vm.$store.commit('toggleOverLay')\n    await apiWarp('/setStudentTime', data, 'post').then((res) => {\n      let data = res.data;\n      if (data.status == 0) {\n        vm.$message({\n          type: 'success',\n          message: data.msg\n        })\n      } else {\n        vm.$message({\n          type: 'error',\n          message: data.msg\n        })\n      }\n    }).catch((err) => {\n      console.log(err);\n    })\n    //关闭遮罩层\n    setTimeout(() => {\n      vm.$store.commit('toggleOverLay')\n    }, 1000)\n    //重新获取数据\n    this.getAllStudents(data.uuid, vm)\n  },\n\n  //修改权值\n  async changeWeight(data, vm) {\n    //开启遮罩层\n    vm.$store.commit(\"toggleOverLay\");\n    //发送请求\n    await apiWarp('/setWeight', data, 'post').then((res) => {\n      let data = res.data;\n      if (data.status == 0) {\n        vm.$message({\n          type: 'success',\n          message: data.msg\n        })\n      } else {\n        vm.$message({\n          type: 'error',\n          message: data.msg\n        })\n      }\n    }).catch(err => {\n      console.log(err);\n    })\n    //关闭遮罩\n    setTimeout(() => {\n      vm.$store.commit('toggleOverLay')\n    }, 1000)\n  },\n\n  //搜索数据\n  async searchApi(data, vm) {\n    vm.$store.commit('toggleOverLay')\n    await apiWarp('/searchStudent', data, 'post').then((res) => {\n      let data = res.data\n      if (data.status == 0) {\n        vm.tableData = data.students\n      } else {\n        vm.$message({\n          type: 'error',\n          message: data.msg\n        })\n      }\n    }).catch(err => {\n      console.log(err);\n    })\n    setTimeout(() => {\n      vm.$store.commit('toggleOverLay')\n    }, 1000)\n  }\n};\n\nconst apiWarp = (url, data, methods) => {\n  return new Promise(async (resolve, reject) => {\n    try {\n      let target = config.serverAddress + url\n      if (methods === \"post\") {\n        resolve(await axios.post(target, data));\n      } else if (methods === \"get\") {\n        resolve(await axios.get(target));\n      }\n    } catch (err) {\n      reject(err);\n    }\n  });\n}\n"]}]}